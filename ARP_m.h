//
// Generated file, do not edit! Created by nedtool 5.6 from ARP.msg.
//

#ifndef __ARP_M_H
#define __ARP_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>ARP.msg:19</tt> by nedtool.
 * <pre>
 * //
 * // TODO generated message class
 * //
 * packet ARP
 * {
 *     short opcode;             //1:requset    2:reply
 *     string source_mac;
 *     string dest_mac;
 *     string source_ip;
 *     string dest_ip;
 *     int TTL;
 * }
 * </pre>
 */
class ARP : public ::omnetpp::cPacket
{
  protected:
    short opcode;
    ::omnetpp::opp_string source_mac;
    ::omnetpp::opp_string dest_mac;
    ::omnetpp::opp_string source_ip;
    ::omnetpp::opp_string dest_ip;
    int TTL;

  private:
    void copy(const ARP& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const ARP&);

  public:
    ARP(const char *name=nullptr, short kind=0);
    ARP(const ARP& other);
    virtual ~ARP();
    ARP& operator=(const ARP& other);
    virtual ARP *dup() const override {return new ARP(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual short getOpcode() const;
    virtual void setOpcode(short opcode);
    virtual const char * getSource_mac() const;
    virtual void setSource_mac(const char * source_mac);
    virtual const char * getDest_mac() const;
    virtual void setDest_mac(const char * dest_mac);
    virtual const char * getSource_ip() const;
    virtual void setSource_ip(const char * source_ip);
    virtual const char * getDest_ip() const;
    virtual void setDest_ip(const char * dest_ip);
    virtual int getTTL() const;
    virtual void setTTL(int TTL);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const ARP& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, ARP& obj) {obj.parsimUnpack(b);}


#endif // ifndef __ARP_M_H

